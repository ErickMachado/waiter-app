openapi: '3.0.0'

info:
  description: 'A food order API for the waiterAPP project'
  title: 'WaiterAPP API'
  version: '0.0.1'

tags:
  - name: 'Category'
  - name: 'Product'

paths:
  /categories:
    get:
      description: 'Return all categories registered'
      summary: 'Return a list of categories'
      responses:
        '200':
          description: 'A list of categories'
          content:
            application/json:
              schema:
                type: 'array'
                items:
                  $ref: '#/components/schemas/Category'
        '500':
          description: 'An unknown error happens'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      tags: ['Category']
    post:
      description: 'Create a new category and return it'
      summary: 'Create a new category'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: 'object'
              properties:
                icon:
                  type: 'string'
                  example: üçî
                name:
                  type: 'string'
                  example: 'Lanches'
      responses:
        '200':
          description: 'The category was successfully created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: 'The property name or icon was not sent'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '422':
          description: 'The payload is correct but some value is invalid'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
        '500':
          description: 'An unknown error happens'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      tags: ['Category']
  /products:
    get:
      description: 'Return all products'
      summary: 'Return all products'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: 'array'
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: 'An unknown error happens'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      tags: ['Product']
    post:
      description: 'Create a new product'
      summary: 'Create a new product'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: 'object'
              properties:
                categoryId:
                  type: 'string'
                  example: 'clapcnt900000bjuobxdafuyz'
                name:
                  type: 'string'
                  example: 'Pizza Quatro Queijos'
                description:
                  type: 'string'
                  example: 'Pizza de Quatro Queijos com borda tradicional'
                image:
                  description: 'The file to be uploaded'
                  type: 'string'
                  format: 'binary'
                price:
                  type: 'number'
                  example: 40
                ingredients:
                  description: 'An optional list of ingredients'
                  type: 'array'
                  items:
                    type: 'object'
                    properties:
                      icon:
                        type: 'string'
                        example: 'üßÄ'
                      name:
                        type: 'string'
                        example: 'Mussarela'

      responses:
        '200':
          description: 'Product was successfully created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: 'Some property in the payload is missing'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '409':
          description: 'A category with provided categoryId does not exists'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '422':
          description: 'The payload format is correct, but some value is not accepted by the API'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
        '500':
          description: 'An unknown error happens'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      tags: ['Product']
components:
  schemas:
    BadRequest:
      type: 'object'
      properties:
        error:
          example: 'Required payload param is missing'
          type: 'string'
        statusCode:
          type: 'number'
          example: 400
    Category:
      type: 'object'
      properties:
        icon:
          type: 'string'
          example: 'üçï'
        id:
          type: 'string'
          example: 'clamk5l4r00002v6lgtcs6wji'
        name:
          type: 'string'
          example: 'Pizzas'
    InternalServerError:
      type: 'object'
      properties:
        statusCode:
          type: 'number'
          example: 500
    NotFound:
      type: 'object'
      properties:
        error:
          example: 'Resource does not exists'
          type: 'string'
        statusCode:
          type: 'number'
          example: 409
    Product:
      type: 'object'
      properties:
        categoryId:
          type: 'string'
          example: 'clapcnt900000bjuobxdafuyz'
        description:
          type: 'string'
          example: 'Pizza de Quatro Queijos com borda tradicional'
        id:
          type: 'string'
          example: 'clamk5l4r00002v6lgtcs6wji'
        imageName:
          type: 'string'
          example: '1668953640374-quatro-queijos.jpg'
        ingredients:
          type: 'array'
          items:
            type: 'object'
            properties:
              icon:
                type: 'string'
                example: 'üßÄ'
              name:
                type: 'string'
                example: 'Mussarela'
        name:
          type: 'string'
          example: 'Pizza Quatro Queijos'
        price:
          type: 'string'
          example: '40'
    UnprocessableEntity:
      type: 'object'
      properties:
        error:
          example: 'The payload is correct but some value is invalid'
          type: 'string'
        statusCode:
          type: 'number'
          example: 422
